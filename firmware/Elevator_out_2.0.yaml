esphome:
  name: elevator_out
  platform: ESP8266
  board: esp01_1m
  # esp8266_restore_from_flash: yes
  # board_flash_mode: dout
  
substitutions:
  ds18b20_1: GPIO12
  ds18b20_2: '0x3D00000D6920BA28'
  button: GPIO4
  led: GPIO14

wifi:
  # ssid: !secret wifi_ssid
  # password: !secret wifi_passwd
  reboot_timeout: 30min
  # manual_ip:
  #   static_ip: 192.168.1.10
  #   gateway: 192.168.1.1
  #   subnet: 255.255.255.0
  networks:
    - ssid: !secret wifi_ssid_4
      password: !secret wifi_passwd_4
      priority: 0
    - ssid: !secret wifi_ssid_3
      password: !secret wifi_passwd_3
      priority: 1
  ap:
    ssid: !secret ap_ssid
    password: !secret ap_password
  use_address: 172.22.0.130

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:
  password: !secret api_passwd
  reboot_timeout: 8h

ota:
  safe_mode: True
  password: !secret ota_passwd
  port: 8266
  
# Example configuration entry
web_server:
  port: 80
  auth:
    username: !secret web_server_username
    password: !secret web_server_password
    
################################################################################

# ## MQTT服务器onenet
# mqtt:
#   broker: !secret one_broker
#   port: !secret one_port
#   username: !secret one_username
#   password: !secret one_password
#   topic_prefix: onenet
#   # discovery_retain: false
#   client_id: $client_id

# Example configuration entry
globals:
  - id: elevator_relay
    type: int
    restore_value: yes
    initial_value: '0'

# Example configuration entry
dallas:
  - pin: $ds18b20_1

# Individual sensors
sensor:
  - platform: dallas
    address: $ds18b20_2
    name: "Chip_Temperature"
    unit_of_measurement: °C

switch:
## 模拟电梯按键
  - platform: gpio
    name: "Call_elevator"
    pin: $button
    id: relay
    on_turn_on:
    ## 呼叫电梯，存变量
      - lambda: |-
          id(elevator_relay) += 1;
      - delay: 0.2s
      - switch.turn_off: relay
      

binary_sensor:
## 电梯按键led反馈
  - platform: gpio
    pin:
      number: $led
      mode: INPUT_PULLUP
      inverted: True
    name: "Button_led"
    id: led
    ## led to on，如果变量非空，tts
    on_press:
      then:
        - lambda: |-
            if (id(elevator_relay) > 0) {
              id(tts).publish_state("电梯正在上行, 请准备出门");
            } 
    ## led to off，如果变量非空，清除变量并tts
    on_release:
      then:
        - lambda: |-
            if (id(elevator_relay) > 0) {
              id(elevator_relay) = 0;
              id(tts).publish_state("电梯已到, 请出门乘梯");
            } 
            
# ##
#   - platform: template
#     name: "tts"
#     lambda: |-
#       if (id(tts) > 0) {
#         return true;
#       } else {
#         return false;
#       }

# Example configuration entry
text_sensor:
  - platform: template
    name: "TTS"
    id: tts
